# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   annotations:
#     kubernetes.io/ingress.class: nginx
#     nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
#     nginx.ingress.kubernetes.io/ssl-passthrough: "true"
#   name: argo-ingress
#   namespace: argocd
# spec:
#   tls:
#     - hosts:
#         - "argotest.tk"
#       secretName: argo-tls
#   rules:
#     - host: "argotest.tk"
#       http:
#         paths:
#           - path: /argocd
#             pathType: Prefix
#             backend:
#               service:
#                 name: argocd-server
#                 port:
#                   number: 443
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: argocd-server
#                 port:
#                   number: 443

# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: argocd-server-ingress
#   namespace: argocd
#   annotations:
#     cert-manager.io/cluster-issuer: letsencrypt-cluster-issuer
#     kubernetes.io/ingress.class: nginx
#     kubernetes.io/tls-acme: "true"
#     nginx.ingress.kubernetes.io/ssl-passthrough: "true"
#     # If you encounter a redirect loop or are getting a 307 response code
#     # then you need to force the nginx ingress to connect to the backend using HTTPS.
#     #
#     nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
# spec:
#   rules:
#   - host: argotest.tk
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: argocd-server
#             port:
#               name: https
#   tls:
#   - hosts:
#     - argotest.tk
#     secretName: argocd-secret

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argocd-server-ingress
  namespace: argocd
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
spec:
  rules:
  - host: argotest.tk
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: argocd-server
            port:
              number: 443
  tls:
  - hosts:
    - argotest.tk
    secretName: api-tls